/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.RequestVdaQdReport;
import org.openapitools.model.RequestVdaQdReportSearch;
import org.openapitools.model.Response;
import org.openapitools.model.ResponseVdaQdApplicationTableDetailList;
import org.openapitools.model.ResponseVdaQdFile;
import org.openapitools.model.ResponseVdaQdModelApiResponse;
import org.openapitools.model.ResponseVdaQdReport;
import org.openapitools.model.ResponseVdaQdReportError;
import org.openapitools.model.ResponseVdaQdReportList;
import org.openapitools.model.ResponseVdaQdReportRun;
import org.openapitools.model.ResponseVdaQdReportStatusList;
import org.openapitools.model.ResponseVdaQdUserApplicationList;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import java.util.Optional;
import javax.validation.Valid;
import javax.validation.constraints.*;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-05-28T13:41:28.114098400-03:00[America/Buenos_Aires]", comments = "Generator version: 7.13.0")
@Validated
@Tag(name = "vda-qd", description = "the vda-qd API")
public interface VdaQdApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /vda-qd/1.0/add-report
     * Add Report
     *
     * @param requestVdaQdReport VDA QD Report (required)
     * @return VDA QD Model Api Response (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "addReport",
        description = "Add Report",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Model Api Response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdModelApiResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/vda-qd/1.0/add-report",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdModelApiResponse> addReport(
        @Parameter(name = "RequestVdaQdReport", description = "VDA QD Report", required = true) @Valid @RequestBody RequestVdaQdReport requestVdaQdReport
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"header\" : \"header\", \"message\" : \"message\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /vda-qd/1.0/delete-report/{reportId}
     * Delete Report
     *
     * @param reportId  (required)
     * @return VDA QD Model Api Response (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "deleteReport",
        description = "Delete Report",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Model Api Response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdModelApiResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/vda-qd/1.0/delete-report/{reportId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdModelApiResponse> deleteReport(
        @Parameter(name = "reportId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("reportId") Integer reportId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"header\" : \"header\", \"message\" : \"message\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /vda-qd/1.0/disable-report/{reportId}
     * Disable Report
     *
     * @param reportId  (required)
     * @return VDA QD Model Api Response (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "disableReport",
        description = "Disable Report",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Model Api Response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdModelApiResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/vda-qd/1.0/disable-report/{reportId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdModelApiResponse> disableReport(
        @Parameter(name = "reportId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("reportId") Integer reportId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"header\" : \"header\", \"message\" : \"message\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /vda-qd/1.0/download-csv-report
     * Download CSV Report
     *
     * @param reportId  (required)
     * @return VDA QD File (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "downloadCsvReport",
        description = "Download CSV Report",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD File", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdFile.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/vda-qd/1.0/download-csv-report",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdFile> downloadCsvReport(
        @NotNull @Parameter(name = "reportId", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "reportId", required = true) Integer reportId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"fileName\" : \"fileName\", \"contentType\" : \"contentType\", \"fileContent\" : \"fileContent\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /vda-qd/1.0/download-pdf-report
     * Download PDF Report
     *
     * @param reportId  (required)
     * @return VDA QD File (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "downloadPdfReport",
        description = "Download PDF Report",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD File", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdFile.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/vda-qd/1.0/download-pdf-report",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdFile> downloadPdfReport(
        @NotNull @Parameter(name = "reportId", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "reportId", required = true) Integer reportId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"fileName\" : \"fileName\", \"contentType\" : \"contentType\", \"fileContent\" : \"fileContent\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /vda-qd/1.0/download-xlsx-report
     * Download XLSX Report
     *
     * @param reportId  (required)
     * @return VDA QD File (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "downloadXlsxReport",
        description = "Download XLSX Report",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD File", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdFile.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/vda-qd/1.0/download-xlsx-report",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdFile> downloadXlsxReport(
        @NotNull @Parameter(name = "reportId", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "reportId", required = true) Integer reportId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"fileName\" : \"fileName\", \"contentType\" : \"contentType\", \"fileContent\" : \"fileContent\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /vda-qd/1.0/enable-report/{reportId}
     * Enable Report
     *
     * @param reportId  (required)
     * @return VDA QD Model Api Response (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "enableReport",
        description = "Enable Report",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Model Api Response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdModelApiResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/vda-qd/1.0/enable-report/{reportId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdModelApiResponse> enableReport(
        @Parameter(name = "reportId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("reportId") Integer reportId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"header\" : \"header\", \"message\" : \"message\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /vda-qd/1.0/get-available-tables
     * Get Available Tables
     *
     * @param applicationName  (required)
     * @return VDA QD Application Table Detail List (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "getAvailableTables",
        description = "Get Available Tables",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Application Table Detail List", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdApplicationTableDetailList.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/vda-qd/1.0/get-available-tables",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdApplicationTableDetailList> getAvailableTables(
        @NotNull @Parameter(name = "applicationName", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "applicationName", required = true) String applicationName
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"vdaQdApplicationTableDetails\" : [ { \"vdaQdApplicationTableColumns\" : [ { \"vdaQdApplicationTableRelation\" : { \"referencedTableName\" : \"referencedTableName\", \"referencedTableColumnName\" : \"referencedTableColumnName\" }, \"columnType\" : \"columnType\", \"columnName\" : \"columnName\" }, { \"vdaQdApplicationTableRelation\" : { \"referencedTableName\" : \"referencedTableName\", \"referencedTableColumnName\" : \"referencedTableColumnName\" }, \"columnType\" : \"columnType\", \"columnName\" : \"columnName\" } ], \"tableName\" : \"tableName\" }, { \"vdaQdApplicationTableColumns\" : [ { \"vdaQdApplicationTableRelation\" : { \"referencedTableName\" : \"referencedTableName\", \"referencedTableColumnName\" : \"referencedTableColumnName\" }, \"columnType\" : \"columnType\", \"columnName\" : \"columnName\" }, { \"vdaQdApplicationTableRelation\" : { \"referencedTableName\" : \"referencedTableName\", \"referencedTableColumnName\" : \"referencedTableColumnName\" }, \"columnType\" : \"columnType\", \"columnName\" : \"columnName\" } ], \"tableName\" : \"tableName\" } ] }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /vda-qd/1.0/get-logged-user
     * Get Logged User
     *
     * @return VDA QD Model Api Response (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "getLoggedUser",
        description = "Get Logged User",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Model Api Response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdModelApiResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/vda-qd/1.0/get-logged-user",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdModelApiResponse> getLoggedUser(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"header\" : \"header\", \"message\" : \"message\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /vda-qd/1.0/get-old-report
     * Get Old Report
     *
     * @param reportId  (required)
     * @return VDA QD Report (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "getOldReport",
        description = "Get Old Report",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Report", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdReport.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/vda-qd/1.0/get-old-report",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdReport> getOldReport(
        @NotNull @Parameter(name = "reportId", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "reportId", required = true) Integer reportId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"reportId\" : 0, \"application\" : \"application\", \"lastUpdate\" : \"lastUpdate\", \"name\" : \"name\", \"description\" : \"description\", \"creationDate\" : \"creationDate\", \"graphic\" : true, \"vdaQdUser\" : { \"fullname\" : \"fullname\", \"userId\" : \"userId\" }, \"sql\" : \"sql\", \"status\" : \"status\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /vda-qd/1.0/get-report
     * Get Report
     *
     * @param reportId  (required)
     * @return VDA QD Report (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "getReport",
        description = "Get Report",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Report", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdReport.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/vda-qd/1.0/get-report",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdReport> getReport(
        @NotNull @Parameter(name = "reportId", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "reportId", required = true) Integer reportId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"reportId\" : 0, \"application\" : \"application\", \"lastUpdate\" : \"lastUpdate\", \"name\" : \"name\", \"description\" : \"description\", \"creationDate\" : \"creationDate\", \"graphic\" : true, \"vdaQdUser\" : { \"fullname\" : \"fullname\", \"userId\" : \"userId\" }, \"sql\" : \"sql\", \"status\" : \"status\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /vda-qd/1.0/get-report-status
     * Get Report Status
     *
     * @return VDA QD Report Status List (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "getReportStatus",
        description = "Get Report Status",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Report Status List", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdReportStatusList.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/vda-qd/1.0/get-report-status",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdReportStatusList> getReportStatus(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"statusList\" : [ \"statusList\", \"statusList\" ] }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /vda-qd/1.0/get-run-info
     * Get Run Info
     *
     * @param reportId  (required)
     * @return VDA QD Report Run (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "getRunInfo",
        description = "Get Run Info",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Report Run", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdReportRun.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/vda-qd/1.0/get-run-info",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdReportRun> getRunInfo(
        @NotNull @Parameter(name = "reportId", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "reportId", required = true) Integer reportId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"result\" : \"result\", \"vdaQdReport\" : { \"reportId\" : 0, \"application\" : \"application\", \"lastUpdate\" : \"lastUpdate\", \"name\" : \"name\", \"description\" : \"description\", \"creationDate\" : \"creationDate\", \"graphic\" : true, \"vdaQdUser\" : { \"fullname\" : \"fullname\", \"userId\" : \"userId\" }, \"sql\" : \"sql\", \"status\" : \"status\" }, \"comments\" : \"comments\", \"startTime\" : \"startTime\", \"endTime\" : \"endTime\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /vda-qd/1.0/get-user-applications
     * Get User Applications
     *
     * @return VDA QD User Application List (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "getUserApplications",
        description = "Get User Applications",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD User Application List", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdUserApplicationList.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/vda-qd/1.0/get-user-applications",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdUserApplicationList> getUserApplications(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"applications\" : [ \"applications\", \"applications\" ] }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /vda-qd/1.0/preview-report
     * Preview Report
     *
     * @param requestVdaQdReport VDA QD Report (required)
     * @return VDA QD Model Api Response (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "previewReport",
        description = "Preview Report",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Model Api Response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdModelApiResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/vda-qd/1.0/preview-report",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdModelApiResponse> previewReport(
        @Parameter(name = "RequestVdaQdReport", description = "VDA QD Report", required = true) @Valid @RequestBody RequestVdaQdReport requestVdaQdReport
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"header\" : \"header\", \"message\" : \"message\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /vda-qd/1.0/preview-report-by-id
     * Preview Report By Id
     *
     * @param reportId  (required)
     * @return VDA QD Model Api Response (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "previewReportById",
        description = "Preview Report By Id",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Model Api Response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdModelApiResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/vda-qd/1.0/preview-report-by-id",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdModelApiResponse> previewReportById(
        @NotNull @Parameter(name = "reportId", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "reportId", required = true) Integer reportId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"header\" : \"header\", \"message\" : \"message\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /vda-qd/1.0/run-report/{reportId}
     * Run Report
     *
     * @param reportId  (required)
     * @return VDA QD Model Api Response (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "runReport",
        description = "Run Report",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Model Api Response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdModelApiResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/vda-qd/1.0/run-report/{reportId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdModelApiResponse> runReport(
        @Parameter(name = "reportId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("reportId") Integer reportId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"header\" : \"header\", \"message\" : \"message\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /vda-qd/1.0/search-all-reports
     * Search All Reports
     *
     * @param requestVdaQdReportSearch VDA QD Report Search (required)
     * @return VDA QD Report List (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "searchAllReports",
        description = "Search All Reports",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Report List", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdReportList.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/vda-qd/1.0/search-all-reports",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdReportList> searchAllReports(
        @Parameter(name = "RequestVdaQdReportSearch", description = "VDA QD Report Search", required = true) @Valid @RequestBody RequestVdaQdReportSearch requestVdaQdReportSearch
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"vdaQdReports\" : [ { \"reportId\" : 0, \"application\" : \"application\", \"lastUpdate\" : \"lastUpdate\", \"name\" : \"name\", \"description\" : \"description\", \"creationDate\" : \"creationDate\", \"graphic\" : true, \"vdaQdUser\" : { \"fullname\" : \"fullname\", \"userId\" : \"userId\" }, \"sql\" : \"sql\", \"status\" : \"status\" }, { \"reportId\" : 0, \"application\" : \"application\", \"lastUpdate\" : \"lastUpdate\", \"name\" : \"name\", \"description\" : \"description\", \"creationDate\" : \"creationDate\", \"graphic\" : true, \"vdaQdUser\" : { \"fullname\" : \"fullname\", \"userId\" : \"userId\" }, \"sql\" : \"sql\", \"status\" : \"status\" } ] }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /vda-qd/1.0/search-reports
     * Search Reports
     *
     * @param requestVdaQdReportSearch VDA QD Report Search (required)
     * @return VDA QD Report List (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "searchReports",
        description = "Search Reports",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Report List", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdReportList.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/vda-qd/1.0/search-reports",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdReportList> searchReports(
        @Parameter(name = "RequestVdaQdReportSearch", description = "VDA QD Report Search", required = true) @Valid @RequestBody RequestVdaQdReportSearch requestVdaQdReportSearch
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"vdaQdReports\" : [ { \"reportId\" : 0, \"application\" : \"application\", \"lastUpdate\" : \"lastUpdate\", \"name\" : \"name\", \"description\" : \"description\", \"creationDate\" : \"creationDate\", \"graphic\" : true, \"vdaQdUser\" : { \"fullname\" : \"fullname\", \"userId\" : \"userId\" }, \"sql\" : \"sql\", \"status\" : \"status\" }, { \"reportId\" : 0, \"application\" : \"application\", \"lastUpdate\" : \"lastUpdate\", \"name\" : \"name\", \"description\" : \"description\", \"creationDate\" : \"creationDate\", \"graphic\" : true, \"vdaQdUser\" : { \"fullname\" : \"fullname\", \"userId\" : \"userId\" }, \"sql\" : \"sql\", \"status\" : \"status\" } ] }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /vda-qd/1.0/update-report
     * Update Report
     *
     * @param requestVdaQdReport VDA QD Report (required)
     * @return VDA QD Model Api Response (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "updateReport",
        description = "Update Report",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Model Api Response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdModelApiResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/vda-qd/1.0/update-report",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdModelApiResponse> updateReport(
        @Parameter(name = "RequestVdaQdReport", description = "VDA QD Report", required = true) @Valid @RequestBody RequestVdaQdReport requestVdaQdReport
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"header\" : \"header\", \"message\" : \"message\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /vda-qd/1.0/view-error
     * View Error
     *
     * @param reportId  (required)
     * @return VDA QD Report Error (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "viewError",
        description = "View Error",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Report Error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdReportError.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/vda-qd/1.0/view-error",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdReportError> viewError(
        @NotNull @Parameter(name = "reportId", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "reportId", required = true) Integer reportId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"reportId\" : 0, \"errorMessage\" : \"errorMessage\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /vda-qd/1.0/view-report
     * View Report
     *
     * @param reportId  (required)
     * @return VDA QD Model Api Response (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "viewReport",
        description = "View Report",
        tags = { "vda-qd" },
        responses = {
            @ApiResponse(responseCode = "200", description = "VDA QD Model Api Response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseVdaQdModelApiResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/vda-qd/1.0/view-report",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ResponseVdaQdModelApiResponse> viewReport(
        @NotNull @Parameter(name = "reportId", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "reportId", required = true) Integer reportId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"header\" : \"header\", \"message\" : \"message\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
