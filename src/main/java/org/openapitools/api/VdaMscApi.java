/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.RequestLoginVda;
import org.openapitools.model.Response;
import org.openapitools.model.ResponseLoginOkVda;
import org.openapitools.model.ResponseLogoutVda;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import javax.validation.Valid;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-05-28T13:41:28.114098400-03:00[America/Buenos_Aires]", comments = "Generator version: 7.13.0")
@Validated
@Tag(name = "vda-msc", description = "the vda-msc API")
public interface VdaMscApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /vda-msc/1.0/login
     * Login al Sistema
     *
     * @param requestLoginVda Request Login MSC (required)
     * @return Response Login MSC (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "login",
        description = "Login al Sistema",
        tags = { "vda-msc" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Response Login MSC", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseLoginOkVda.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/vda-msc/1.0/login",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ResponseLoginOkVda> login(
        @Parameter(name = "RequestLoginVda", description = "Request Login MSC", required = true) @Valid @RequestBody RequestLoginVda requestLoginVda
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"loginOk\" : true, \"userEmail\" : \"userEmail\", \"userName\" : \"userName\", \"userID\" : \"userID\", \"userSurname\" : \"userSurname\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /vda-msc/1.0/logout
     * Logout del Sistema
     *
     * @param requestLoginVda Request Login MSC (required)
     * @return Response Logout MSC (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "logout",
        description = "Logout del Sistema",
        tags = { "vda-msc" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Response Logout MSC", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseLogoutVda.class))
            }),
            @ApiResponse(responseCode = "default", description = "unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/vda-msc/1.0/logout",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ResponseLogoutVda> logout(
        @Parameter(name = "RequestLoginVda", description = "Request Login MSC", required = true) @Valid @RequestBody RequestLoginVda requestLoginVda
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : { \"usuarioDominio\" : \"usuarioDominio\" }, \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"header\" : { \"resultCode\" : \"ok\", \"messageCode\" : \"WC100\", \"errorDetail\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"messageDescription\" : \"No data found\", \"serviceInstance\" : { \"system\" : \"retail\", \"port\" : \"28080\", \"ip\" : \"10.11.12.13\", \"latency\" : 247, \"name\" : \"com.midd.test.service.AccountsService\", \"index\" : 2, \"operation\" : \"listAccounts\", \"version\" : \"1.0.4\", \"layer\" : \"service\" }, \"error\" : [ { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" }, { \"code\" : \"WC100\", \"description\" : \"No data found\", \"id\" : \"accountNumber\" } ], \"transactionId\" : \"8a33ff49-64adce33-0164-add58e7b-0032\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
